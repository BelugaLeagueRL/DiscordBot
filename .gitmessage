# <type>(<scope>): <subject>
#
# <body>
#
# <footer>

# Types:
# feat: A new feature
# fix: A bug fix
# docs: Documentation only changes
# style: Changes that do not affect the meaning of the code
# refactor: A code change that neither fixes a bug nor adds a feature
# perf: A code change that improves performance
# test: Adding missing tests or correcting existing tests
# build: Changes that affect the build system or external dependencies
# ci: Changes to our CI configuration files and scripts
# chore: Other changes that don't modify src or test files
# revert: Reverts a previous commit

# Rules:
# - Use the imperative, present tense: "change" not "changed" nor "changes"
# - Don't capitalize the first letter
# - No dot (.) at the end
# - Keep the subject line to 50 characters or less
# - Separate subject from body with a blank line
# - Use the body to explain what and why vs. how
# - Wrap the body at 72 characters
# - Use the footer to reference issue tracker IDs
# - NEVER reference Claude, AI assistants, or automated tools in commit messages
# - NEVER reference meta information from conversations in commit messages
# - Focus on the technical change and business value, not the development process

# Examples:
# feat(auth): add OAuth2 integration
# fix(parser): handle edge case with empty strings
# docs: update API documentation
# style: fix code formatting issues
# refactor(database): optimize query performance
# test: add unit tests for user registration